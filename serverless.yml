service: ${file(project.yml):app.id}
useDotenv: true

provider:
  name: aws
  stage: ${opt:stage, 'staging'}
  region: ${opt:region, 'eu-central-1'} # this region also needs to be registered in ACM
  # NOTE: Environment variables that are shared between all environments
  environment:
    APP_NAME: ${self:custom.app_name}
    APP_URL: https://${self:custom.default_domain_config.domain_name}
    APP_KEY: bref-ssm:/${self:custom.app_id}/app_key
    APP_DEBUG: ${switch(${self:custom.env}, ${file(project.yml):_env_debug_mode})}

    # allows: serverless deploy function --function=web --update-config --param="maintenance=1"
    MAINTENANCE_MODE: ${param:maintenance, null}

    QUEUE_CONNECTION: sqs
    # reference of handler: Bref\LaravelBridge\Queue\QueueHandler
    SQS_QUEUE: "${construct:jobs.queueUrl}"

    DB_CONNECTION: pgsql
    DB_PORT: 5432
    DB_DATABASE: ${file(project.yml):app.id}-${self:custom.env}
    DB_PASSWORD: bref-ssm:/prod-primary-projects/rds-password
    DB_HOST: bref-ssm:/prod-primary-projects/rds-endpoint
    DB_USERNAME: bref-ssm:/prod-primary-projects/rds-user

    BROADCAST_CONNECTION: log
    LOG_CHANNEL: Stderr

    VITE_APP_NAME: ${self:custom.app_id}

    SESSION_DRIVER: Cookie

    FILESYSTEM_DISK: s3
    FILESYSTEM_DRIVER: s3
    FILESYSTEM_CLOUD: s3
    AWS_BUCKET: !Ref Storage
    PROJECT_AWS_BUCKET: !Ref Storage
    PROJECT_AWS_DEFAULT_REGION: eu-central-1
    PROJECT_AWS_USE_PATH_STYLE_ENDPOINT: true

    RESEND_API_KEY: /prod-primary-projects/rds-endpoint

    MAIL_MAILER: resend

  iam:
    role:
      statements:
        - Effect: Allow
          Action: ssm:GetParameters
          Resource: '*'
        - Effect: Allow
          Action: s3:*
          Resource:
            - !Sub "${Storage.Arn}" # the storage bucket
            - !Sub "${Storage.Arn}/*" # and everything inside

package:
  patterns:
    - '!node_modules/**'
    - '!public/storage'
    - '!resources/assets/**'
    - '!storage/**'
    - '!tests/**'
    - '!database/*.sqlite'

functions:
  web:
    handler: public/index.php
    runtime: ${file(project.yml):_deployment.aws.php_runtime}-fpm
    timeout: 28 # in seconds (API Gateway has a timeout of 29 seconds)
    events:
      - httpApi: '*'

  artisan:
    handler: artisan
    runtime: ${file(project.yml):_deployment.aws.php_runtime}-console
    timeout: 720

constructs:
  website:
    type: server-side-website
    domain: ${self:custom.default_domain_config.domain_name}
    certificate: ${self:custom.default_domain_config.acm_certificate_arn}
    assets:
      "/build/*": "public/build"
      "/favicon.ico": public/favicon.ico
      "/robots.txt": public/robots.txt
      "/js/*": "public/js"
      "/css/*": "public/css"

    # add here any file or directory that needs to be served from S3
    # Laravel uses some headers that are not in CloudFront's default whitelist.
    # To add any, we need to list all accepted headers to pass through.
    # https://github.com/getlift/lift/blob/master/docs/server-side-website.md#forwarded-headers
    forwardedHeaders:
      - Accept
      - Accept-Language
      - Content-Type
      - Origin
      - Referer
      - User-Agent
      - X-Forwarded-Host
      - X-Requested-With
      - X-Csrf-Token
      - X-Livewire
      - X-Inertia

  jobs:
    type: queue
    worker:
      handler: Bref\LaravelBridge\Queue\QueueHandler
      runtime: ${file(project.yml):_deployment.aws.php_runtime}
      timeout: 900

resources:
  Resources:
    Storage:
      Type: AWS::S3::Bucket

    Route53Record:
      Type: AWS::Route53::RecordSet
      Properties:
        HostedZoneId: ${self:custom.default_domain_config.hostedZoneId}
        Name: ${self:custom.default_domain_config.domain_name}
        Type: A
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2 # CloudFront's hosted zone ID (constant)
          DNSName: ${construct:website.cname}

plugins:
  - ./vendor/bref/bref
  - serverless-dotenv-plugin
  - serverless-lift
  - serverless-plugin-utils

custom:
  dotenv:
    path: .env.${self:provider.stage}
    logging: false
    required:
      file: true


  # NOTE: Hacky switch statement to set the domain prefix for the environment
  domain_prefix: ${switch(${self:custom.env}, ${file(project.yml):_domain_config.env_domain_prefix})}

  env: ${env:APP_ENV}
  app_id: ${file(project.yml):app.id}
  app_name: ${file(project.yml):app.name}

  default_domain_config:
    base_domain: ${file(project.yml):_domain_config.base_domain}
    domain_name: ${self:custom.domain_prefix}${self:custom.default_domain_config.base_domain}
    acm_certificate_arn: ${file(project.yml):_domain_config.acm_certificate_arn}
    hostedZoneId: ${file(project.yml):_domain_config.hostedZoneId}
